version: '3'

services:
  db:
    image: postgis/postgis:13-3.0-alpine
    environment:
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_DB: ${DB_NAME}
      PGDATA: /var/lib/postgres/data/pgdata
    volumes:
      - postgres:/var/lib/postgres/data
    healthcheck:
      test: pg_isready -U postgres -h 127.0.0.1
      interval: 5s

  backend:
    build:
      context: .
      dockerfile: ./.docker/go/Dockerfile
      args:
        USER_ID: ${USER_ID:-1000}
        GROUP_ID: ${GROUP_ID:-1000}
        GO_VERSION: ${GO_VERSION:-1.21}
    depends_on:
      db:
        condition: service_healthy
      frontend:
        condition: service_healthy
    env_file: .env
    volumes:
      - ./:/app
      - go_pkg:/go
    healthcheck:
      test: curl -f http://localhost:${PORT:-3000}/healthz
      interval: 5s
    ports:
      - ${PORT:-3000}:3000

  frontend:
    build:
      context: .
      dockerfile: ./.docker/node/Dockerfile
      args:
        USER_ID: ${USER_ID:-1000}
        GROUP_ID: ${GROUP_ID:-1000}
        NODEJS_VERSION: ${NODEJS_VERSION:-18.12}
    volumes:
      - ./:/app
    healthcheck:
      test: test -f /app/modules/ui/build/index.html
      interval: 5s

volumes:
  postgres:
  go_pkg:
